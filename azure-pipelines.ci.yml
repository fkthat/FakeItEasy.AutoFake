# Azure Pipelines CI

trigger:
- develop
- release/*
- master

pool:
  vmImage: ubuntu-latest

variables:
  BuildConfiguration: Release
  VersionSuffix: CI-$(Build.BuildNumber)
  
steps:

- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    useGlobalJson: true

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: 'restore'
    arguments: -c $(BuildConfiguration)

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: 'build'
    arguments: -c $(BuildConfiguration) --no-restore

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: 'test'
    publishTestResults: true
    arguments: -c $(BuildConfiguration) --no-build

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: 'test/**/coverage.cobertura.xml'
    
- task: DotNetCoreCLI@2
  displayName: Pack
  inputs:
    command: 'custom'
    projects: 'src/**/*.csproj'
    custom: 'pack'
    arguments: '-c $(BuildConfiguration) -p:VersionSuffix=$(VersionSuffix) -o $(Build.ArtifactStagingDirectory)'

- task: DotNetCoreCLI@2
  displayName: Push
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'FakeItEasy.AutoFake/CI'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      ls $(Build.ArtifactStagingDirectory)
