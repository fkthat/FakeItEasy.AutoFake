# Azure Pipelines CI

trigger:
- develop
- release/*
- master
- refs/tags/*

pool:
  vmImage: ubuntu-latest

variables:
  BuildConfiguration: Release
  VersionSuffix: ""
  
steps:

- task: Bash@3
  displayName: SetVersionSuffix
  condition: not(startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
  inputs:
    targetType: 'inline'
    script: |
       echo "##vso[task.setvariable variable=VersionSuffix]CI-$(Build.BuildNumber)"

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: 'restore'
    arguments: -c $(BuildConfiguration)

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: 'build'
    arguments: -c $(BuildConfiguration) --no-restore

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: 'test'
    publishTestResults: true
    arguments: -c $(BuildConfiguration) --no-build

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: 'test/**/coverage.cobertura.xml'

- task: DotNetCoreCLI@2
  displayName: Pack
  inputs:
    command: 'custom'
    custom: 'pack'
    arguments: '-o $(Build.ArtifactStagingDirectory) -c $(BuildConfiguration) -p:VersionSuffix=$(VersionSuffix) --no-build'

- task: DotNetCoreCLI@2
  displayName: Push
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'c472e21d-e222-44fd-9261-9d76d8c0fb53/24aa52ca-735d-4e91-8f45-434760e31803'
